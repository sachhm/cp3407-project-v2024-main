Project Planning Phase (Before Iteration 1)
(Chapters 1–3: Requirements, Planning, User Stories)

Checklist/TODOs
GitHub Setup
Create a repository using the supplied github template (zipped in the project folder):
README.md (project overview, goals, and team roles).
project-plan.md (iteration timelines, user stories, and priorities).
Ensure all initial commits (e.g., setup, planning docs) are timestamped BEFORE Iteration 1 start date.
User Stories
Follow the INVEST criteria (p39): Independent, Negotiable, Valuable, Estimable, Small, Testable.
Create more user stories than fit into Iterations 1 and 2 to practice prioritization.
Example format:
markdown
Copy
### User Stories (Backlog)  
- [ ] **User Story Title** | Priority: High/Medium/Low | Estimate: X days  
  - *Description*: As a [role], I want [goal] so that [reason].  
Prioritization
Use MoSCoW Method (Must-have, Should-have, Could-have, Won’t-have) or a simple numeric priority (1–5).
Ensure at least 20–30% of user stories are deprioritized to simulate real-world constraints.
Iteration 1 Template
(Duration: 3–4 weeks | Start: [DATE] | End: [DATE])

Checklist/TODOs
GitHub Tracking
Create a branch: iteration-1.
Track progress via:
Commits: Daily updates with meaningful messages.
Issues: Label user stories as todo, in-progress, done.
Pull Requests: Experiment with PRs for code reviews (if applicable).
User Stories for Iteration 1
markdown
Copy
### Iteration 1 Goals  
- [ ] **User Story A** | Priority: High | Estimate: 3 days  
- [ ] **User Story B** | Priority: Medium | Estimate: 2 days  
- [ ] **User Story C** | Priority: Low | Estimate: 1 day  
**Total Estimate**: 6 days (adjust based on team capacity)  
Weekly Updates
Every prac session:
Update project-plan.md with progress.
Re-prioritize backlog based on new insights.
Iteration 2 Template
(Duration: 3–4 weeks | Start: [DATE] | End: [DATE])

Checklist/TODOs
GitHub Tracking
Create a branch: iteration-2.
Use Milestones to group issues by iteration.
User Stories for Iteration 2
markdown
Copy
### Iteration 2 Goals  
- [ ] **User Story D** | Priority: High | Estimate: 4 days  
- [ ] **User Story E** | Priority: Medium | Estimate: 2 days  
**Total Estimate**: 6 days  
Backlog Adjustments
Move unfinished stories from Iteration 1 to Iteration 2 (if necessary).
Add new user stories from the backlog.
Handling Constraints
(Not Enough Time/Developers)

Checklist/TODOs
Scope Reduction
Use the Kano Model to identify "delighters" vs. "basics" and cut lower-priority stories.
Example:
markdown
Copy
### Deprioritized Stories  
- [ ] **User Story F** | Priority: Low | Estimate: 3 days  
- [ ] **User Story G** | Priority: Low | Estimate: 2 days  
**Total Cut**: 5 days  
Team Adjustments
Reassign tasks based on developer availability.
Use GitHub’s Projects Board to visualize workload.
Actual Iterations Tracker
(Update retroactively during/after iterations)

Iteration 1 Actual
markdown

Copy

- **Completed**:  
  - [ ] User Story A | Actual Effort: 4 days  
  - [ ] User Story B | Actual Effort: 3 days  
- **Unfinished**: User Story C (moved to Iteration 2).  
Iteration 2 Actual
markdown

Copy

- **Completed**:  
  - [ ] User Story C | Actual Effort: 2 days  
  - [ ] User Story D | Actual Effort: 3 days  
Key Tips
Git Hygiene:
Use git tag to mark the start/end of iterations.
Write descriptive commit messages (e.g., git commit -m "feat: Add login page [Iteration-1]").
Retrospectives:
After each iteration, hold a 15-minute retrospective to document lessons learned.
This template ensures alignment with Head-First principles while adapting to real-world constraints. Let me know if you need help customizing it further!

